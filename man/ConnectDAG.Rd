% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ConnectDAG.R
\name{ConnectDAG}
\alias{ConnectDAG}
\title{Class representing a DAG of Connect Tasks}
\description{
Class representing a DAG of Connect Tasks

Class representing a DAG of Connect Tasks
}
\section{Usage}{

\preformatted{
dag <- ConnectDAG$new(name = "dag")
}
}

\section{Details}{


This class requires ConnectTasks are added to it,
which are themselves linked in a dependency chain.
As tasks are added, each tasks' graph is unioned in the DAG's graph.
It can then be validated to ensure it is in fact a Directed Acyclic Graph.
Once validated, the DAG can orchestrate tasks in Posit Connect.
}

\seealso{
Other R6 classes: 
\code{\link{ConnectTask}},
\code{\link{SimTask}}
}
\concept{R6 classes}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{The user-defined name of this DAG. Useful for organizing multiple DAGs.}

\item{\code{pin_name}}{The name of pin on Connect where this DAG is saved.}

\item{\code{tasks}}{A list of ConnectTasks this DAG is orchestrating.}

\item{\code{dag_graph}}{An igraph object of all linked tasks in this DAG}

\item{\code{is_valid}}{Indicates if the tasks' dependency chain forms a proper DAG. DO NOT MODIFY DIRECTLY!}

\item{\code{run_id}}{A UUID created for an instance of a DAG run}

\item{\code{run_start}}{The time a DAG run started}

\item{\code{run_end}}{The time a DAG run ended}

\item{\code{is_complete}}{Indicates if all tasks in this DAG have been evaluated for execution.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ConnectDAG-new}{\code{ConnectDAG$new()}}
\item \href{#method-ConnectDAG-print}{\code{ConnectDAG$print()}}
\item \href{#method-ConnectDAG-add_task}{\code{ConnectDAG$add_task()}}
\item \href{#method-ConnectDAG-remove_task}{\code{ConnectDAG$remove_task()}}
\item \href{#method-ConnectDAG-set_name}{\code{ConnectDAG$set_name()}}
\item \href{#method-ConnectDAG-set_connect_pin_name}{\code{ConnectDAG$set_connect_pin_name()}}
\item \href{#method-ConnectDAG-plot}{\code{ConnectDAG$plot()}}
\item \href{#method-ConnectDAG-task_attrs}{\code{ConnectDAG$task_attrs()}}
\item \href{#method-ConnectDAG-tasks_as_df}{\code{ConnectDAG$tasks_as_df()}}
\item \href{#method-ConnectDAG-execute}{\code{ConnectDAG$execute()}}
\item \href{#method-ConnectDAG-reset}{\code{ConnectDAG$reset()}}
\item \href{#method-ConnectDAG-evaluate_validity}{\code{ConnectDAG$evaluate_validity()}}
\item \href{#method-ConnectDAG-clone}{\code{ConnectDAG$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectDAG-new"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectDAG-new}{}}}
\subsection{Method \code{new()}}{
Initializes a new ConnectDAG
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectDAG$new(name = "new_dag", ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{A personalized name for the DAG}

\item{\code{...}}{Connect Tasks to add to the graph}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectDAG-print"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectDAG-print}{}}}
\subsection{Method \code{print()}}{
Displays summary of environment in console.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectDAG$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectDAG-add_task"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectDAG-add_task}{}}}
\subsection{Method \code{add_task()}}{
Adds a ConnectTask to this DAG
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectDAG$add_task(task)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task}}{a ConnectTask R6 environment}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectDAG-remove_task"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectDAG-remove_task}{}}}
\subsection{Method \code{remove_task()}}{
Removes a ConnectTask from this DAG
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectDAG$remove_task(task)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task}}{a ConnectTask R6 environment}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectDAG-set_name"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectDAG-set_name}{}}}
\subsection{Method \code{set_name()}}{
Sets the name of this DAG, if needed to change after initializing
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectDAG$set_name(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{A scalar character of the name}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectDAG-set_connect_pin_name"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectDAG-set_connect_pin_name}{}}}
\subsection{Method \code{set_connect_pin_name()}}{
Sets the name used when using \link[connectapi.dag]{dag_write_connect_pin}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectDAG$set_connect_pin_name(pin_name = self$name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pin_name}}{A scalar character of the name desired or required}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectDAG-plot"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectDAG-plot}{}}}
\subsection{Method \code{plot()}}{
Prints a plotly graph of the DAG's graph
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectDAG$plot()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectDAG-task_attrs"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectDAG-task_attrs}{}}}
\subsection{Method \code{task_attrs()}}{
Returns a character vector of DAG tasks' specified attribute
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectDAG$task_attrs(task_attr = c("guid", "name", "status"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task_attr}}{The name of the character attribute to return}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectDAG-tasks_as_df"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectDAG-tasks_as_df}{}}}
\subsection{Method \code{tasks_as_df()}}{
Returns a data.frame of all tasks added to this DAG
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectDAG$tasks_as_df(revalidate_dag = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{revalidate_dag}}{Should the DAG be validated before returning the data.frame?}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectDAG-execute"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectDAG-execute}{}}}
\subsection{Method \code{execute()}}{
Executes all tasks, in order, that are added to this DAG
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectDAG$execute(verbose = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{Should it print messages as it executes tasks?}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectDAG-reset"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectDAG-reset}{}}}
\subsection{Method \code{reset()}}{
Resets the DAG to an initial state, allowing it to run again
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectDAG$reset()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectDAG-evaluate_validity"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectDAG-evaluate_validity}{}}}
\subsection{Method \code{evaluate_validity()}}{
Determines if all added tasks form a valid DAG, setting the `is_valid` field
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectDAG$evaluate_validity(verbose = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{Should it print a message to the console of the result?}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectDAG-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectDAG-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectDAG$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
