% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ConnectTask.R
\name{ConnectTask}
\alias{ConnectTask}
\title{Class representing a Task published to Connect}
\description{
Class representing a Task published to Connect

Class representing a Task published to Connect
}
\section{Usage}{

\preformatted{
task <- ConnectTask$new(
  guid = "1f6c9a82-0177-47fa-a27c-be090b39dca7",
  trigger_rule = "always",
  connect_server = connectapi::connect()
)
task$execute()
}
}

\section{Details}{


This class validates a published content item on Posit Connect,
and allows the user to render the item programatically.
Additionally, other tasks may be set as dependencies or dependents
for the purposes of creating a DAG.
}

\seealso{
Other R6 classes: 
\code{\link{ConnectDAG}},
\code{\link{SimTask}}
}
\concept{R6 classes}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{guid}}{The guid of the content item published to Connect}

\item{\code{name}}{The name of the ContentItem on Connect}

\item{\code{status}}{The status of this task. Possible statuses: Pending, Succeeded, Failed, Skipped}

\item{\code{trigger_rule}}{The rule for when to run this task. See \link[connectapi.dag]{connect_task} for details}

\item{\code{upstream_tasks}}{A list of ConnectTask R6 envs that are dependencies for this task}

\item{\code{downstream_tasks}}{A list of ConnectTask R6 envs that are dependents of this task}

\item{\code{task_graph}}{An igraph object of this task, and its immediate upstream and downstream tasks}

\item{\code{connect_server}}{An Connect R6 env generated from connectapi::connect()}

\item{\code{connect_content_item}}{A ContentItem R6 env generated from connectapi::content_item()}

\item{\code{connect_variant}}{A TaskVariant R6 env generated from connectapi::get_variant_default()}

\item{\code{connect_rendering}}{A VariantRender R6 env generated from connectapi::variant_render()}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ConnectTask-new}{\code{ConnectTask$new()}}
\item \href{#method-ConnectTask-reset}{\code{ConnectTask$reset()}}
\item \href{#method-ConnectTask-df_row}{\code{ConnectTask$df_row()}}
\item \href{#method-ConnectTask-set_downstream}{\code{ConnectTask$set_downstream()}}
\item \href{#method-ConnectTask-set_upstream}{\code{ConnectTask$set_upstream()}}
\item \href{#method-ConnectTask-link_task}{\code{ConnectTask$link_task()}}
\item \href{#method-ConnectTask-update_task_graph}{\code{ConnectTask$update_task_graph()}}
\item \href{#method-ConnectTask-plot}{\code{ConnectTask$plot()}}
\item \href{#method-ConnectTask-linked_tasks_attrs}{\code{ConnectTask$linked_tasks_attrs()}}
\item \href{#method-ConnectTask-execute}{\code{ConnectTask$execute()}}
\item \href{#method-ConnectTask-poll_task}{\code{ConnectTask$poll_task()}}
\item \href{#method-ConnectTask-can_run}{\code{ConnectTask$can_run()}}
\item \href{#method-ConnectTask-clone}{\code{ConnectTask$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectTask-new"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectTask-new}{}}}
\subsection{Method \code{new()}}{
Initializes a new ConnectTask
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectTask$new(guid, trigger_rule = "all_success", connect_server)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{guid}}{A scalar character of the guid for the content deployed to Posit Connect}

\item{\code{trigger_rule}}{A scalar character that defines state of dependency (upstream) tasks must be in to execute}

\item{\code{connect_server}}{A \link[connectapi]{connect} environment with a connection to the Connect server}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectTask-reset"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectTask-reset}{}}}
\subsection{Method \code{reset()}}{
Resets the task to an initial state, read to be executed
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectTask$reset()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectTask-df_row"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectTask-df_row}{}}}
\subsection{Method \code{df_row()}}{
Makes a single-row data.frame of this Task's details.
Used by the ConnectDAG to create a data.frame of all linked tasks.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectTask$df_row()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectTask-set_downstream"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectTask-set_downstream}{}}}
\subsection{Method \code{set_downstream()}}{
Sets dependent tasks on this task
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectTask$set_downstream(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Any number of ConnectTask R6 environments}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectTask-set_upstream"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectTask-set_upstream}{}}}
\subsection{Method \code{set_upstream()}}{
Sets dependency tasks on this task
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectTask$set_upstream(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Any number of ConnectTask R6 environments}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectTask-link_task"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectTask-link_task}{}}}
\subsection{Method \code{link_task()}}{
Adds a single ConnectTask link either upstream or downstream.
Should not be used directly.
Called internally by the set_upstream and set_downstream methods.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectTask$link_task(task, link = c("upstream_tasks", "downstream_tasks"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task}}{A ConnectTask R6 environment}

\item{\code{link}}{The type of link to create}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectTask-update_task_graph"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectTask-update_task_graph}{}}}
\subsection{Method \code{update_task_graph()}}{
Re-generates this task's `task_graph` after a task is linked
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectTask$update_task_graph()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectTask-plot"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectTask-plot}{}}}
\subsection{Method \code{plot()}}{
Visualizes this task's `task_graph`
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectTask$plot()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectTask-linked_tasks_attrs"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectTask-linked_tasks_attrs}{}}}
\subsection{Method \code{linked_tasks_attrs()}}{
Returns a list of the linked tasks' attributes
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectTask$linked_tasks_attrs(
  link = c("both", "upstream_tasks", "downstream_tasks"),
  task_attr = c("guid", "name", "status")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{link}}{They type of link to use to search for tasks}

\item{\code{task_attr}}{The name of the attribute to return}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectTask-execute"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectTask-execute}{}}}
\subsection{Method \code{execute()}}{
Executes a ConnectTask on a remote Connect Server
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectTask$execute(verbose = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{Should the task print messages as it executes?}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectTask-poll_task"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectTask-poll_task}{}}}
\subsection{Method \code{poll_task()}}{
A wrapper around connectapi::poll_task for this task's execution
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectTask$poll_task(verbose = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{Should the task print messages as it executes?}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectTask-can_run"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectTask-can_run}{}}}
\subsection{Method \code{can_run()}}{
Returns a logical indicating if this task can run based on the `trigger_rule`
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectTask$can_run()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectTask-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectTask-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectTask$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
